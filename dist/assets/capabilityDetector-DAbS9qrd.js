var k=Object.defineProperty;var w=(m,e,t)=>e in m?k(m,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):m[e]=t;var f=(m,e,t)=>w(m,typeof e!="symbol"?e+"":e,t);import{A as P}from"./HomeView-I79g9zJd.js";import"./index-CPuDN9P1.js";const g=class g{constructor(){f(this,"testCache",new Map);f(this,"aiService",P.getInstance())}static getInstance(){return g.instance||(g.instance=new g),g.instance}async detectCapabilities(e,t,a=!1){var i;const s=`${e.id}:${t}`;if(!a&&this.testCache.has(s)){const r=this.testCache.get(s);if(Date.now()-(((i=r.testResult)==null?void 0:i.timestamp.getTime())||0)<24*60*60*1e3)return r}const n=await this.performCapabilityTest(e,t);return this.testCache.set(s,n),n}async detectCapabilitiesWithCallback(e,t,a,s,n=!1){var l,p,y,T;const i=`${e.id}:${t}`;if(!n&&this.testCache.has(i)){const o=this.testCache.get(i);if(Date.now()-(((l=o.testResult)==null?void 0:l.timestamp.getTime())||0)<24*60*60*1e3){a(((p=o.testResult)==null?void 0:p.connected)||!1,((y=o.testResult)==null?void 0:y.responseTime)||0,(T=o.testResult)==null?void 0:T.error),s(o);return}}const r=this.getAPIType(e,t),h=Date.now();try{const o=await this.testBasicConnection(e,t),u=Date.now()-h;if(a(o.connected,u,o.error),!o.connected){const c=this.createFailedCapabilities(o,r);s(c),this.testCache.set(i,c);return}setTimeout(async()=>{try{const c=await this.testThinkingCapability(e,t,r,o.preferStream),d={reasoning:c.reasoning,reasoningType:c.reasoningType,supportedParams:c.supportedParams,testResult:{connected:!0,reasoning:c.reasoning,responseTime:u,timestamp:new Date}};this.testCache.set(i,d),s(d)}catch{const d={reasoning:!1,reasoningType:null,supportedParams:this.getDefaultCapabilities(r).supportedParams,testResult:{connected:!0,reasoning:!1,responseTime:u,timestamp:new Date}};this.testCache.set(i,d),s(d)}},100)}catch(o){const u={connected:!1,error:o instanceof Error?o.message:String(o)};a(!1,Date.now()-h,u.error);const c=this.createFailedCapabilities(u,r);s(c),this.testCache.set(i,c)}}async performCapabilityTest(e,t){const a=this.getAPIType(e,t),s=Date.now();try{const n=await this.testBasicConnection(e,t);if(!n.connected)return this.createFailedCapabilities(n,a);const i=await this.testThinkingCapability(e,t,a,n.preferStream);return{reasoning:i.reasoning,reasoningType:i.reasoningType,supportedParams:i.supportedParams,testResult:{connected:!0,reasoning:i.reasoning,responseTime:Date.now()-s,timestamp:new Date}}}catch(n){return this.createFailedCapabilities({connected:!1,error:n instanceof Error?n.message:String(n)},a)}}async testBasicConnection(e,t){const a=[{role:"user",content:"Hi"}];try{const s=await this.aiService.callAI(a,e,t,!0);if(!!(s&&typeof s=="string"&&s.trim().length>0))return{connected:!0,preferStream:!0}}catch(s){console.log("流式测试失败，尝试非流式测试:",s)}try{const s=await this.aiService.callAI(a,e,t,!1);if(!!(s&&typeof s=="string"&&s.trim().length>0))return{connected:!0,preferStream:!1}}catch(s){return{connected:!1,error:s instanceof Error?s.message:String(s)}}return{connected:!1,error:"流式和非流式测试都失败"}}async testThinkingCapability(e,t,a,s){switch(a){case"openai":return await this.testOpenAIThinking(e,t,s);case"google":return await this.testGeminiThinking(e,t,s);case"anthropic":return await this.testClaudeThinking(e,t,s);default:return this.getDefaultCapabilities(a)}}async testOpenAIThinking(e,t,a){var n,i,r;const s=[{role:"user",content:"一家商店原价100元的商品，先打8折，再打9折，最终价格是多少？请详细展示你的计算和推理过程。"}];try{if(this.isO1Model(t))return{reasoning:!!((r=(i=(n=(await this.callOpenAIWithO1Params(e,t,s)).choices)==null?void 0:n[0])==null?void 0:i.message)!=null&&r.reasoning),reasoningType:"openai-reasoning",supportedParams:{temperature:!1,maxTokens:"max_completion_tokens",streaming:!1,systemMessage:!0}};const h=await this.callOpenAIWithThinkingInstructions(e,t,s,a),l=this.detectThinkingInResponse(h,"openai");return{reasoning:l,reasoningType:l?"generic-cot":null,supportedParams:{temperature:!0,maxTokens:"max_tokens",streaming:!0,systemMessage:!0}}}catch{return this.getDefaultCapabilities("openai")}}async testGeminiThinking(e,t,a){const s=[{role:"user",content:"请思考并回答：什么是人工智能？"}];try{const n=await this.callGeminiAPIRaw(e,t,s,a),i=this.detectGeminiThoughtField(n);let r=i;return i||(r=this.isGeminiThinkingModel(t)),{reasoning:r,reasoningType:r?"gemini-thought":null,supportedParams:{temperature:!0,maxTokens:"max_tokens",streaming:!0,systemMessage:!0}}}catch{return this.getDefaultCapabilities("google")}}async testClaudeThinking(e,t,a){const s=[{role:"user",content:"请用<thinking>标签展示你的思考过程，然后回答：什么是AI？"}];try{const n=await this.aiService.callAI(s,e,t,a||!1),i=typeof n=="string"&&n.includes("<thinking>")&&n.includes("</thinking>");let r=i;return i||(r=this.isClaudeThinkingModel(t)),{reasoning:r,reasoningType:r?"claude-thinking":null,supportedParams:{temperature:!0,maxTokens:"max_tokens",streaming:!0,systemMessage:!0}}}catch{return this.getDefaultCapabilities("anthropic")}}getAPIType(e,t){const a=e.models.find(s=>s.id===t);return(a==null?void 0:a.apiType)||e.type}isO1Model(e){return e.toLowerCase().includes("o1")}isClaudeThinkingModel(e){const t=e.toLowerCase();return t.includes("claude-3.5")||t.includes("claude-4")||t.includes("sonnet")||t.includes("opus")}isGeminiThinkingModel(e){const t=e.toLowerCase();return t.includes("gemini-2.")||t.includes("gemini-pro")||t.includes("thinking")||t.includes("exp")}detectGeminiThoughtField(e){try{if(typeof e=="string")try{e=JSON.parse(e)}catch{return!1}if(e&&e.candidates&&Array.isArray(e.candidates)){for(const t of e.candidates)if(t.content&&t.content.parts){for(const a of t.content.parts)if(a.thought)return!0}}return!1}catch{return!1}}detectThinkingInResponse(e,t){if(typeof e!="string")return!1;const a=e.toLowerCase();switch(t){case"openai":return this.detectOpenAIThinking(e);case"google":return a.includes("思考")||a.includes("分析")||a.includes("reasoning")||this.hasStructuredThinking(e);case"anthropic":return a.includes("<thinking>")||a.includes("让我思考")||a.includes("分析")||this.hasStructuredThinking(e);default:return!1}}detectOpenAIThinking(e){const t=e.toLowerCase(),s=["<thinking>","thinking:","思考：","分析：","推理：","首先","然后","接着","最后","第一步","第二步","第三步","step 1","step 2","step 3","步骤1","步骤2","计算","计算过程","解题","推导","验证","原价","打折","折扣","最终价格","让我","我需要","我们来","分析一下","考虑到","因此","所以","由此可见","可以得出","根据","基于","考虑","假设","如果","那么"].filter(r=>t.includes(r)).length,n=this.hasStructuredThinking(e),i=this.hasMathematicalReasoning(e);return s>=2&&n||s>=3||i||t.includes("<thinking>")||t.includes("分析过程")}hasStructuredThinking(e){const t=/[1-9]\.|[一二三四五]\s*、|步骤\s*[1-9]/.test(e),s=e.split(`
`).filter(r=>r.trim().length>0).length>2,i=["因为","所以","然而","但是","因此","由于","由此","可见"].filter(r=>e.includes(r)).length;return t||s&&i>=2}hasMathematicalReasoning(e){return[/\d+\s*[×*]\s*\d+/,/\d+\s*[÷/]\s*\d+/,/\d+\s*[+]\s*\d+/,/\d+\s*[-]\s*\d+/,/=\s*\d+/,/0\.\d+/,/\d+%/,/打.*折/,/折扣/].some(a=>a.test(e))}getDefaultCapabilities(e){const t={temperature:!0,maxTokens:"max_tokens",streaming:!0,systemMessage:!0};return e==="openai"?{reasoning:!1,reasoningType:null,supportedParams:{...t}}:e==="google"?{reasoning:!1,reasoningType:null,supportedParams:{...t}}:e==="anthropic"?{reasoning:!1,reasoningType:null,supportedParams:{...t}}:{reasoning:!1,reasoningType:null,supportedParams:t}}createFailedCapabilities(e,t){return{reasoning:!1,reasoningType:null,supportedParams:this.getDefaultCapabilities(t).supportedParams,testResult:{connected:e.connected,reasoning:!1,responseTime:0,error:e.error,timestamp:new Date}}}async callOpenAIWithO1Params(e,t,a){try{if(!e.baseUrl)throw new Error("API URL 未配置");let s=e.baseUrl.trim();s.includes("/chat/completions")||(s.includes("/v1")?s=s.replace(/\/+$/,"")+"/chat/completions":s=s.replace(/\/+$/,"")+"/v1/chat/completions");const n=await fetch(s,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e.apiKey}`},body:JSON.stringify({model:t,messages:a.map(i=>({role:i.role,content:i.content})),max_completion_tokens:100})});if(!n.ok)throw new Error(`OpenAI API error: ${n.status} ${n.statusText}`);return await n.json()}catch(s){throw s}}async callOpenAIWithThinkingInstructions(e,t,a,s){const n=[{role:"system",content:"请在回答问题时展示你的完整思考过程。包括：1）分析问题 2）制定解决步骤 3）执行计算或推理 4）验证答案。请明确标出每个步骤。"},...a];return await this.aiService.callAI(n,e,t,s||!1)}async callGeminiAPIRaw(e,t,a,s){try{if(!e.baseUrl)throw new Error("API URL 未配置");let n=e.baseUrl.trim();n.endsWith("/v1beta")||(n.includes("/models/")&&(n=n.split("/models/")[0]),n.endsWith("/v1beta")||(n=n.replace(/\/+$/,"")+"/v1beta")),n=`${n}/models/${t}:generateContent`;const i=new URL(n);i.searchParams.set("key",e.apiKey);const h={contents:a.map(p=>({role:p.role==="assistant"?"model":"user",parts:[{text:p.content}]})),generationConfig:{temperature:.7}},l=await fetch(i.toString(),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(h)});if(!l.ok)throw new Error(`Gemini API error: ${l.status} ${l.statusText}`);return await l.json()}catch(n){throw n}}clearCache(){this.testCache.clear()}getCacheStats(){return{size:this.testCache.size,keys:Array.from(this.testCache.keys())}}};f(g,"instance");let C=g;export{C as CapabilityDetector};
